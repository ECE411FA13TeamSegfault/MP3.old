-- VHDL Entity ece411.Memory.interface
--
-- Created:
--          by - chng2.ews (linux-a2.ews.illinois.edu)
--          at - 03:42:29 10/04/13
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

ENTITY Memory IS
   PORT( 
      ADDRESS   : IN     LC3B_WORD;
      DATAOUT   : IN     LC3b_word;
      MREAD_L   : IN     std_logic;
      MWRITEH_L : IN     std_logic;
      MWRITEL_L : IN     std_logic;
      RESET_L   : IN     std_logic;
      clk       : IN     std_logic;
      DATAIN    : OUT    LC3b_word;
      MRESP_H   : OUT    std_logic
   );

-- Declarations

END Memory ;

--
-- VHDL Architecture ece411.Memory.struct
--
-- Created:
--          by - chng2.ews (linux-a2.ews.illinois.edu)
--          at - 03:42:29 10/04/13
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;


ARCHITECTURE struct OF Memory IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL AddressInCache : std_logic;
   SIGNAL AddressSel     : std_logic;
   SIGNAL CacheDirty_H   : std_logic;
   SIGNAL CacheHit_H     : std_logic;
   SIGNAL CacheMiss_H    : std_logic;
   SIGNAL CacheWrite_H   : std_logic;
   SIGNAL LoadStore      : std_logic;
   SIGNAL WayDataInSel   : std_logic;
   SIGNAL pmaddress      : LC3b_word;
   SIGNAL pmdatain       : LC3b_oword;
   SIGNAL pmdataout      : LC3b_oword;
   SIGNAL pmread_l       : std_logic;
   SIGNAL pmresp_h       : std_logic;
   SIGNAL pmwrite_l      : std_logic;


   -- Component Declarations
   COMPONENT Cache_Controller
   PORT (
      AddressInCache : IN     std_logic ;
      CacheDirty_H   : IN     std_logic ;
      CacheHit_H     : IN     std_logic ;
      CacheMiss_H    : IN     std_logic ;
      LoadStore      : IN     std_logic ;
      RESET_L        : IN     std_logic ;
      clk            : IN     std_logic ;
      pmresp_h       : IN     std_logic ;
      AddressSel     : OUT    std_logic ;
      CacheWrite_H   : OUT    std_logic ;
      WayDataInSel   : OUT    std_logic ;
      pmread_l       : OUT    std_logic ;
      pmwrite_l      : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT Cache_Datapath
   PORT (
      ADDRESS        : IN     LC3B_WORD ;
      AddressSel     : IN     std_logic ;
      CacheWrite_H   : IN     std_logic ;
      DATAOUT        : IN     LC3b_word ;
      MREAD_L        : IN     std_logic ;
      MWRITEH_L      : IN     std_logic ;
      MWRITEL_L      : IN     std_logic ;
      RESET_L        : IN     std_logic ;
      WayDataInSel   : IN     std_logic ;
      clk            : IN     std_logic ;
      pmdatain       : IN     LC3b_oword ;
      AddressInCache : OUT    std_logic ;
      CacheDirty_H   : OUT    std_logic ;
      CacheHit_H     : OUT    std_logic ;
      CacheMiss_H    : OUT    std_logic ;
      DATAIN         : OUT    LC3b_word ;
      LoadStore      : OUT    std_logic ;
      MRESP_H        : OUT    std_logic ;
      pmaddress      : OUT    LC3b_word ;
      pmdataout      : OUT    LC3b_oword 
   );
   END COMPONENT;
   COMPONENT Physical_Memory
   PORT (
      RESET_L   : IN     std_logic ;
      clk       : IN     std_logic ;
      pmaddress : IN     LC3b_word ;
      pmdataout : IN     LC3b_oword ;
      pmread_l  : IN     std_logic ;
      pmwrite_l : IN     std_logic ;
      pmdatain  : OUT    LC3b_oword ;
      pmresp_h  : OUT    std_logic 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : Cache_Controller USE ENTITY ece411.Cache_Controller;
   FOR ALL : Cache_Datapath USE ENTITY ece411.Cache_Datapath;
   FOR ALL : Physical_Memory USE ENTITY ece411.Physical_Memory;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   Cache_Cont : Cache_Controller
      PORT MAP (
         AddressInCache => AddressInCache,
         CacheDirty_H   => CacheDirty_H,
         CacheHit_H     => CacheHit_H,
         CacheMiss_H    => CacheMiss_H,
         LoadStore      => LoadStore,
         RESET_L        => RESET_L,
         clk            => clk,
         pmresp_h       => pmresp_h,
         AddressSel     => AddressSel,
         CacheWrite_H   => CacheWrite_H,
         WayDataInSel   => WayDataInSel,
         pmread_l       => pmread_l,
         pmwrite_l      => pmwrite_l
      );
   Cache_DP : Cache_Datapath
      PORT MAP (
         ADDRESS        => ADDRESS,
         AddressSel     => AddressSel,
         CacheWrite_H   => CacheWrite_H,
         DATAOUT        => DATAOUT,
         MREAD_L        => MREAD_L,
         MWRITEH_L      => MWRITEH_L,
         MWRITEL_L      => MWRITEL_L,
         RESET_L        => RESET_L,
         WayDataInSel   => WayDataInSel,
         clk            => clk,
         pmdatain       => pmdatain,
         AddressInCache => AddressInCache,
         CacheDirty_H   => CacheDirty_H,
         CacheHit_H     => CacheHit_H,
         CacheMiss_H    => CacheMiss_H,
         DATAIN         => DATAIN,
         LoadStore      => LoadStore,
         MRESP_H        => MRESP_H,
         pmaddress      => pmaddress,
         pmdataout      => pmdataout
      );
   PDRAM : Physical_Memory
      PORT MAP (
         RESET_L   => RESET_L,
         clk       => clk,
         pmaddress => pmaddress,
         pmdataout => pmdataout,
         pmread_l  => pmread_l,
         pmwrite_l => pmwrite_l,
         pmdatain  => pmdatain,
         pmresp_h  => pmresp_h
      );

END struct;
